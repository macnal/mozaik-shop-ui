import type {Metadata, Viewport} from "next";
import {Roboto} from "next/font/google";

import {AppRouterCacheProvider} from '@mui/material-nextjs/v15-appRouter';

import {CssBaseline, Stack} from "@mui/material";
import {Footer} from "@/components/global/Footer";
import {ThemeContext} from "@/context/theme";
import config from "@/../public/config.json";
import {SessionProvider} from "@/context/auth";
import {auth, signOut} from "@/auth";
import {redirect} from "next/navigation";

const roboto = Roboto({
  weight: ['300', '400', '500', '600', '700', '800'],
  subsets: ['latin'],
  display: 'swap',
  variable: '--font-roboto',
});

export const metadata: Metadata = {
  title: {default: `Sklep planszowki`, template: `%s | Sklep planszowki`},
  description: "Generated by create next app",
};

export const viewport: Viewport = {
  width: 'device-width',
  initialScale: 1,
  maximumScale: 1,
  userScalable: false
};

export default async function RootLayout({
                                           children,
                                           navbar,
                                         }: Readonly<{
  children: React.ReactNode;
  navbar: React.ReactNode;
}>) {
  // const res = await fetch(`${process.env.PUBLIC_URL}/config.json`);
  // const config = await res.json();
  const ui = config.mui;
  const session = await auth();

  return (
    <html lang="pl">
    <body className={`${roboto.variable}`} style={{display: 'flex', flexDirection: 'column', minHeight: "100vh"}}>
    <AppRouterCacheProvider>
      <ThemeContext ui={ui}>
        <SessionProvider session={session}>
          <CssBaseline/>

          {navbar}

          <Stack sx={{flexGrow: 1}}>
            {children}
          </Stack>

          <Footer/>
        </SessionProvider>
      </ThemeContext>
    </AppRouterCacheProvider>
    </body>
    </html>
  );
}
